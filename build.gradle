plugins {
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'org.asciidoctor.convert' version '1.5.6'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.galid'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

asciidoctor {
    sourceDir 'src/main/asciidoc'
    outputDir 'src/main/resources/static'
    attributes \
		'snippets': file('target/snippets')
}

bootJar {
    dependsOn test
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'src/main/resources/static/docs'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.15'

    // okhttp
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.2.2'

    // firebase sdk
    implementation 'com.google.firebase:firebase-admin:6.8.1'

    // jjwt
    compile 'io.jsonwebtoken:jjwt-api:0.11.1'
    runtime 'io.jsonwebtoken:jjwt-impl:0.11.1', 'io.jsonwebtoken:jjwt-jackson:0.11.1' // or 'io.jsonwebtoken:jjwt-gson:0.11.1' for gson

    // querydsl
    implementation 'com.querydsl:querydsl-jpa'

    // p6spy
    implementation group: 'com.github.gavlyukovskiy', name: 'p6spy-spring-boot-starter', version: '1.6.0'

    // software.amazon.awssdk/bom
    implementation platform('software.amazon.awssdk:bom:2.5.29')
    // aws-java-sdk-s3
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.11.754'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}

// querydsl
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

configurations {
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
